on:
  push:
    branches:
      - master
      - eio-test
  pull_request:
permissions:
  contents: read
  id-token: write
  checks: write

name: Build
jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: "Read secrets"
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/github/release-app-credentials appId | APP_ID ;
          secret/data/github/repo/${{ github.repository }}/github/release-app-credentials privateKey | PRIVATE_KEY

    - name: Create App Token
      continue-on-error: true
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ env.APP_ID }}
        private-key: ${{ env.PRIVATE_KEY }}

    - name: Set the TAG value
      id: get-TAG
      run: |
        echo "$(make -s log | grep TAG)" >> "$GITHUB_ENV"

    - name: Verify App Installations
      run: |
        echo "App installations:"
        curl -H "Authorization: Bearer ${{ steps.app-token.outputs.token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/app/installations

    - name: Inspect Token Scopes
      run: |
        echo "Token scopes: ${{ steps.app-token.outputs.scopes }}"
        echo "Token permissions:"
        curl -s -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/rate_limit | jq .resources

    - name: Verify repo access
      run: |
        curl -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
        https://api.github.com/repos/rancher/release-flannel

    - name: Generate JWT Manually
      run: |
        NOW=$(date +%s)
        JWT_HEADER=$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        JWT_PAYLOAD=$(echo -n "{\"iat\":$NOW,\"exp\":$(($NOW + 600)),\"iss\":$APP_ID}" | base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        JWT_SIGNATURE=$(echo -n "$JWT_HEADER.$JWT_PAYLOAD" | openssl dgst -sha256 -sign <(echo "$PRIVATE_KEY") | base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        echo "Manual JWT: $JWT_HEADER.$JWT_PAYLOAD.$JWT_SIGNATURE"
    
        echo "Testing manual JWT:"
        curl -H "Authorization: Bearer $JWT_HEADER.$JWT_PAYLOAD.$JWT_SIGNATURE" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/app/installations
      env:
        APP_ID: ${{ env.APP_ID }}
        PRIVATE_KEY: ${{ env.PRIVATE_KEY }}

    - name: Test token
      run: |
        echo "${{ steps.app-token.outputs.token }}" | base64
        curl -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
         https://api.github.com/repos/rancher/release-flannel
    
    - name: Build container image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: rancher/hardened-flannel:${{ env.TAG }}-amd64
        file: Dockerfile
        build-args: |
          TAG=${{ env.TAG }}
          SRC=x-access-token:${{ steps.app-token.outputs.token }}@github.com/rancher/release-flannel

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.29.0
      with:
        image-ref: rancher/hardened-flannel:${{ env.TAG }}-amd64
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  build-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: "Read secrets"
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/github/release-app-credentials appId | APP_ID ;
          secret/data/github/repo/${{ github.repository }}/github/release-app-credentials privateKey | PRIVATE_KEY

    - name: Create App Token
      continue-on-error: true
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ env.APP_ID }}
        private-key: ${{ env.PRIVATE_KEY }}

    - name: Set the TAG value
      id: get-TAG
      run: |
        echo "$(make -s log | grep TAG)" >> "$GITHUB_ENV"
    - name: Build container image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: rancher/hardened-flannel:${{ env.TAG }}-arm64
        file: Dockerfile
        outputs: type=docker
        platforms: linux/arm64
        build-args: |
          TAG=${{ env.TAG }}
          SRC=x-access-token:${{ steps.app-token.outputs.token }}@github.com/rancher/release-flannel

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.29.0
      with:
        image-ref: rancher/hardened-flannel:${{ env.TAG }}-arm64
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
